SET TRAINING_CUTOFF_DATE = '20090401';
SET OOT_CUTOFF_DATE = '20090101';


SELECT * FROM MDL_CLM_TRAINING_QP_TARGET
UNION ALL
SELECT * FROM MDL_CLM_OOT_QP_TARGET;

-- ALTER TABLE CLAIMS_DETAILS DROP COLUMN CLM_ID,CLM_FROM_DT,CLM_THRU_DT,CLM_PMT_AMT;

DESCRIBE TABLE CLAIMS_DETAILS;

SELECT * FROM CLAIMS_DETAILS;

SELECT COUNT(DISTINCT(DESYNPUF_ID)), COUNT(DESYNPUF_ID) FROM MDL_CLM_TRAINING_QP_TARGET;
SELECT COUNT(DISTINCT(DESYNPUF_ID)),COUNT(DESYNPUF_ID) FROM MDL_CLM_OOT_QP_TARGET;



-- CREATE A SINGLE TABLE FOR TRAIN AND OOT 
-- JOIN WITH CLAIMS_DETAILS TO GET ALL THE COLMUNS
DROP TABLE IF EXISTS MERGE_TRAIN_OOT_OP_TARGET;
CREATE OR REPLACE TABLE MERGE_TRAIN_OOT_OP_TARGET AS
SELECT * FROM MDL_CLM_TRAINING_QP_TARGET
UNION ALL
SELECT * FROM MDL_CLM_OOT_QP_TARGET;

SELECT * FROM MERGE_TRAIN_OOT_OP_TARGET WHERE DESYNPUF_ID='D441DD99563B068A';

-- SELECT B.*,A.FUTURE_COST,A.CUTOFF_DATE FROM
-- (SELECT DESYNPUF_ID,FUTURE_COST,CUTOFF_DATE FROM MERGE_TRAIN_OOT_OP_TARGET) A
-- INNER JOIN 
-- (
--     SELECT * FROM CLAIMS_DETAILS
-- ) B
-- ON A.DESYNPUF_ID=B.DESYNPUF_ID
-- WHERE CLM_FROM_DT >= A.CUTOFF_DATE
-- AND CLM_FROM_DT <= TO_NUMBER(TO_CHAR(DATEADD(DAY, 29, TO_DATE(A.CUTOFF_DATE, 'YYYYMMDD')),'YYYYMMDD'));
DROP TABLE IF EXISTS MERGED_QP_TARGET_ALL;
CREATE OR REPLACE TEMPORARY TABLE MERGED_QP_TARGET_ALL AS
SELECT 
    A.DESYNPUF_ID, 
    A.CUTOFF_DATE, 
    MAX(COALESCE(B.ICD9_DGNS_CD_1, '0')) AS ICD9_DGNS_CD_1,
    MAX(COALESCE(B.ICD9_DGNS_CD_2, '0')) AS ICD9_DGNS_CD_2,
    MAX(COALESCE(B.ICD9_DGNS_CD_3, '0')) AS ICD9_DGNS_CD_3,
    MAX(COALESCE(B.ICD9_DGNS_CD_4, '0')) AS ICD9_DGNS_CD_4,
    MAX(COALESCE(B.ICD9_DGNS_CD_5, '0')) AS ICD9_DGNS_CD_5,
    MAX(COALESCE(B.ICD9_DGNS_CD_6, '0')) AS ICD9_DGNS_CD_6,
    MAX(COALESCE(B.ICD9_DGNS_CD_7, '0')) AS ICD9_DGNS_CD_7,
    MAX(COALESCE(B.ICD9_DGNS_CD_8, '0')) AS ICD9_DGNS_CD_8,
    MAX(COALESCE(B.ICD9_DGNS_CD_9, '0')) AS ICD9_DGNS_CD_9,
    MAX(COALESCE(B.ICD9_DGNS_CD_10, '0')) AS ICD9_DGNS_CD_10,
    MAX(COALESCE(B.ICD9_PRCDR_CD_1, '0')) AS ICD9_PRCDR_CD_1,
    MAX(COALESCE(B.ICD9_PRCDR_CD_2, '0')) AS ICD9_PRCDR_CD_2,
    MAX(COALESCE(B.ICD9_PRCDR_CD_3, '0')) AS ICD9_PRCDR_CD_3,
    MAX(COALESCE(B.ICD9_PRCDR_CD_4, '0')) AS ICD9_PRCDR_CD_4,
    MAX(COALESCE(B.ICD9_PRCDR_CD_5, '0')) AS ICD9_PRCDR_CD_5,
    MAX(COALESCE(B.ICD9_PRCDR_CD_6, '0')) AS ICD9_PRCDR_CD_6,
    MAX(COALESCE(B.HCPCS_CD_1, '0')) AS HCPCS_CD_1,
    MAX(COALESCE(B.HCPCS_CD_2, '0')) AS HCPCS_CD_2,
    MAX(COALESCE(B.HCPCS_CD_3, '0')) AS HCPCS_CD_3,
    MAX(COALESCE(B.HCPCS_CD_4, '0')) AS HCPCS_CD_4,
    MAX(COALESCE(B.HCPCS_CD_5, '0')) AS HCPCS_CD_5,
    MAX(COALESCE(B.HCPCS_CD_6, '0')) AS HCPCS_CD_6,
    MAX(COALESCE(B.HCPCS_CD_7, '0')) AS HCPCS_CD_7,
    MAX(COALESCE(B.HCPCS_CD_8, '0')) AS HCPCS_CD_8,
    MAX(COALESCE(B.HCPCS_CD_9, '0')) AS HCPCS_CD_9,
    MAX(COALESCE(B.HCPCS_CD_10, '0')) AS HCPCS_CD_10,
    MAX(COALESCE(B.HCPCS_CD_11, '0')) AS HCPCS_CD_11,
    MAX(COALESCE(B.HCPCS_CD_12, '0')) AS HCPCS_CD_12,
    MAX(COALESCE(B.HCPCS_CD_13, '0')) AS HCPCS_CD_13,
    MAX(COALESCE(B.HCPCS_CD_14, '0')) AS HCPCS_CD_14,
    MAX(COALESCE(B.HCPCS_CD_15, '0')) AS HCPCS_CD_15,
    MAX(COALESCE(B.HCPCS_CD_16, '0')) AS HCPCS_CD_16,
    MAX(COALESCE(B.HCPCS_CD_17, '0')) AS HCPCS_CD_17,
    MAX(COALESCE(B.HCPCS_CD_18, '0')) AS HCPCS_CD_18,
    MAX(COALESCE(B.HCPCS_CD_19, '0')) AS HCPCS_CD_19,
    MAX(COALESCE(B.HCPCS_CD_20, '0')) AS HCPCS_CD_20,
    MAX(COALESCE(B.HCPCS_CD_21, '0')) AS HCPCS_CD_21,
    MAX(COALESCE(B.HCPCS_CD_22, '0')) AS HCPCS_CD_22,
    MAX(COALESCE(B.HCPCS_CD_23, '0')) AS HCPCS_CD_23,
    MAX(COALESCE(B.HCPCS_CD_24, '0')) AS HCPCS_CD_24,
    MAX(COALESCE(B.HCPCS_CD_25, '0')) AS HCPCS_CD_25,
    MAX(COALESCE(B.HCPCS_CD_26, '0')) AS HCPCS_CD_26,
    MAX(COALESCE(B.HCPCS_CD_27, '0')) AS HCPCS_CD_27,
    MAX(COALESCE(B.HCPCS_CD_28, '0')) AS HCPCS_CD_28,
    MAX(COALESCE(B.HCPCS_CD_29, '0')) AS HCPCS_CD_29,
    MAX(COALESCE(B.HCPCS_CD_30, '0')) AS HCPCS_CD_30,
    MAX(COALESCE(B.HCPCS_CD_31, '0')) AS HCPCS_CD_31,
    MAX(COALESCE(B.HCPCS_CD_32, '0')) AS HCPCS_CD_32,
    MAX(COALESCE(B.HCPCS_CD_33, '0')) AS HCPCS_CD_33,
    MAX(COALESCE(B.HCPCS_CD_34, '0')) AS HCPCS_CD_34,
    MAX(COALESCE(B.HCPCS_CD_35, '0')) AS HCPCS_CD_35,
    MAX(COALESCE(B.HCPCS_CD_36, '0')) AS HCPCS_CD_36,
    MAX(COALESCE(B.HCPCS_CD_37, '0')) AS HCPCS_CD_37,
    MAX(COALESCE(B.HCPCS_CD_38, '0')) AS HCPCS_CD_38,
    MAX(COALESCE(B.HCPCS_CD_39, '0')) AS HCPCS_CD_39,
    MAX(COALESCE(B.HCPCS_CD_40, '0')) AS HCPCS_CD_40,
    MAX(COALESCE(B.HCPCS_CD_41, '0')) AS HCPCS_CD_41,
    MAX(COALESCE(B.HCPCS_CD_42, '0')) AS HCPCS_CD_42,
    MAX(COALESCE(B.HCPCS_CD_43, '0')) AS HCPCS_CD_43,
    MAX(COALESCE(B.HCPCS_CD_44, '0')) AS HCPCS_CD_44,
    MAX(COALESCE(B.HCPCS_CD_45, '0')) AS HCPCS_CD_45,
    MAX(COALESCE(B.NCH_BENE_PTB_DDCTBL_AMT, '0')) AS NCH_BENE_PTB_DDCTBL_AMT,
    MAX(COALESCE(B.NCH_BENE_PTB_COINSRNC_AMT, '0')) AS NCH_BENE_PTB_COINSRNC_AMT,  -- Dynamically generated columns with COALESCE
    (A.FUTURE_COST) AS FUTURE_COST
FROM 
    (MERGE_TRAIN_OOT_OP_TARGET) A
INNER JOIN 
    (CLAIMS_DETAILS) B 
    ON A.DESYNPUF_ID = B.DESYNPUF_ID
WHERE 
    B.CLM_FROM_DT >= A.CUTOFF_DATE
    AND B.CLM_FROM_DT <= TO_NUMBER(TO_CHAR(DATEADD(DAY, 29, TO_DATE(A.CUTOFF_DATE, 'YYYYMMDD')),'YYYYMMDD'))
GROUP BY 
    A.DESYNPUF_ID, 
    A.CUTOFF_DATE,
    A.FUTURE_COST;

-- GET THE TRAINING AND OOT DATA SEPARATELY
DROP TABLE IF EXISTS MDL_CLM_TRAINING_$TRAINING_CUTOFF_DATE;

SELECT * FROM MERGED_QP_TARGET_ALL WHERE CUTOFF_DATE=$TRAINING_CUTOFF_DATE;

CREATE OR REPLACE TABLE MDL_CLM_TRAINING_20090401  AS
SELECT * FROM MERGED_QP_TARGET_ALL WHERE CUTOFF_DATE=$TRAINING_CUTOFF_DATE;


CREATE OR REPLACE TABLE MDL_CLM_OOT_20090101  AS
SELECT * FROM MERGED_QP_TARGET_ALL WHERE CUTOFF_DATE=$OOT_CUTOFF_DATE;

